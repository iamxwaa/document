apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: default
  labels:
    app: jenkins
spec:
  type: NodePort
  ports:
    - name: web
      port: 8080
      nodePort: 30100
    - name: agent
      port: 50000
      nodePort: 30101
  selector:
    app: jenkins
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: jenkins
          image: 192.168.120.160:5000/jenkins:2.363_20
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 8080
            - name: agent
              containerPort: 50000
          resources:
            limits:
              cpu: '4'
              memory: 4Gi
            requests:
              cpu: '4'
              memory: 1Gi
          volumeMounts:
            - name: jenkins-volume
              mountPath: /var/jenkins_home
              subPath: var/jenkins_home
            - name: jenkins-volume
              mountPath: /root
              subPath: root
            - name: jenkins-volume
              mountPath: /var/cache/jenkins/war
              subPath: var/cache/jenkins/war
            - name: jenkins-volume
              mountPath: /var/log/jenkins
              subPath: var/log/jenkins
            - name: jenkins-volume
              mountPath: /etc/maven
              subPath: etc/maven
      volumes:
        - name: jenkins-volume
          persistentVolumeClaim:
            claimName: jenkins
---
kind: "PersistentVolumeClaim"
apiVersion: "v1"
metadata:
  name: jenkins
  namespace: default  
  annotations:
    volume.alpha.kubernetes.io/storage-class: "nfs161"
  labels:
    app: jenkins
spec:
  storageClassName: nfs161
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "200Gi"
